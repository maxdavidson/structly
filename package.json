{
  "name": "structly",
  "version": "0.7.0",
  "license": "MIT",
  "description": "Tool for working with binary data types in JavaScript",
  "author": "Max Davidson <davidsonmax@gmail.com>",
  "repository": {
    "type": "git",
    "url": "https://github.com/maxdavidson/structly.git"
  },
  "engines": {
    "node": ">=4.5.0",
    "npm": ">=2.15.9"
  },
  "main": "lib/index.js",
  "module": "es/index.js",
  "browser": "dist/structly.js",
  "types": "dist/structly.d.ts",
  "scripts": {
    "build": "npm run build:lib & npm run build:umd",
    "build:lib": "tsc --outDir lib --module commonjs",
    "build:es": "tsc --outDir es --module es2015",
    "build:umd": "npm run build:es && rollup --config && dts-bundle --name dist/structly --main es --outputAsModuleFolder",
    "clean": "rimraf dist es lib coverage",
    "typecheck": "tsc --noEmit",
    "lint": "tslint --project tsconfig.json --type-check --format stylish",
    "test": "jest --coverage --no-cache",
    "test:watch": "jest --watch",
    "prebuild": "npm run clean",
    "postbuild": "rimraf {lib,es}/**/__tests__",
    "posttest": "npm run typecheck && npm run lint",
    "preversion": "npm test",
    "prepublishOnly": "npm run build"
  },
  "files": [
    "lib",
    "es",
    "dist"
  ],
  "keywords": [
    "binary",
    "pod",
    "struct",
    "record",
    "serialize",
    "encode",
    "decode",
    "convert",
    "pack",
    "unpack"
  ],
  "dependencies": {
    "@types/node": "^8.0.0",
    "tslib": "^1.7.0"
  },
  "devDependencies": {
    "@types/jest": "^20.0.0",
    "dts-bundle": "^0.7.2",
    "jest": "^21.0.0",
    "jest-environment-node-debug": "^2.0.0",
    "rimraf": "^2.5.4",
    "rollup": "^0.45.2",
    "rollup-plugin-commonjs": "^8.0.2",
    "rollup-plugin-node-builtins": "^2.0.0",
    "rollup-plugin-node-globals": "^1.1.0",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-sourcemaps": "^0.4.1",
    "rollup-plugin-uglify": "^2.0.0",
    "semver": "^5.3.0",
    "ts-jest": "^20.0.0",
    "tslint": "^5.0.0",
    "typescript": "^2.3.2"
  }
}
